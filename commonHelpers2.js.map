{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=delay]'),\n  inputDelayValue: 0,\n  inputsState: document.querySelectorAll('input[name=state]'),\n  stateValue: undefined,\n};\niziToast.settings({\n  timeout: 5000,\n  titleColor: '#fff',\n  position: 'topRight',\n  messageColor: '#fff',\n  icon: '',\n  close: false,\n});\n\nrefs.form.addEventListener('submit', onSubmit);\n\n// Save delay to global variable\nrefs.inputDelay.addEventListener('change', event => {\n  refs.inputDelayValue = event.target.value;\n});\n// Save state to global variable\nrefs.inputsState.forEach(input => {\n  input.addEventListener('change', event => {\n    if (event.target.checked) {\n      refs.stateValue = event.target.value;\n    }\n  });\n});\n\n// Functions\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const promise = new Promise((resolve, reject) => {\n    // Get value from checked input\n    setTimeout(() => {\n      if (refs.stateValue === 'fulfilled') {\n        resolve({ delay: refs.inputDelayValue, status: 'fulfilled' });\n      } else if (refs.stateValue === 'rejected') {\n        reject({ delay: refs.inputDelayValue, status: 'rejected' });\n      } else {\n        return;\n      }\n    }, refs.inputDelayValue);\n  });\n\n  promise\n    .then(value => {\n      showNotification(value);\n      // Clean form\n      refs.form.reset();\n    })\n    .catch(value => {\n      showNotification(value);\n      // Clean form\n      refs.form.reset();\n    });\n}\n\n// Function: show notification\nfunction showNotification(options) {\n  const { delay, status } = options;\n  refs.inputsState.forEach(state => {\n    if (state.checked) {\n      switch (status) {\n        case 'fulfilled':\n          iziToast.success({\n            message: `✅ Fulfilled promise in ${delay}ms`,\n            backgroundColor: '#6ED171',\n            progressBarColor: '#00BF00',\n          });\n          break;\n        case 'rejected':\n          iziToast.error({\n            message: `❌ Rejected promise in ${delay}ms`,\n            backgroundColor: '#F67474',\n            progressBarColor: '#F00000',\n          });\n        default:\n          break;\n      }\n    }\n  });\n}\n"],"names":["refs","iziToast","onSubmit","event","input","resolve","reject","value","showNotification","options","delay","status","state"],"mappings":"wIAGA,MAAMA,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,WAAY,SAAS,cAAc,mBAAmB,EACtD,gBAAiB,EACjB,YAAa,SAAS,iBAAiB,mBAAmB,EAC1D,WAAY,MACd,EACAC,EAAS,SAAS,CAChB,QAAS,IACT,WAAY,OACZ,SAAU,WACV,aAAc,OACd,KAAM,GACN,MAAO,EACT,CAAC,EAEDD,EAAK,KAAK,iBAAiB,SAAUE,CAAQ,EAG7CF,EAAK,WAAW,iBAAiB,SAAUG,GAAS,CAClDH,EAAK,gBAAkBG,EAAM,OAAO,KACtC,CAAC,EAEDH,EAAK,YAAY,QAAQI,GAAS,CAChCA,EAAM,iBAAiB,SAAUD,GAAS,CACpCA,EAAM,OAAO,UACfH,EAAK,WAAaG,EAAM,OAAO,MAErC,CAAG,CACH,CAAC,EAGD,SAASD,EAASC,EAAO,CACvBA,EAAM,eAAc,EAEJ,IAAI,QAAQ,CAACE,EAASC,IAAW,CAE/C,WAAW,IAAM,CACf,GAAIN,EAAK,aAAe,YACtBK,EAAQ,CAAE,MAAOL,EAAK,gBAAiB,OAAQ,WAAW,CAAE,UACnDA,EAAK,aAAe,WAC7BM,EAAO,CAAE,MAAON,EAAK,gBAAiB,OAAQ,UAAU,CAAE,MAE1D,OAER,EAAOA,EAAK,eAAe,CAC3B,CAAG,EAGE,KAAKO,GAAS,CACbC,EAAiBD,CAAK,EAEtBP,EAAK,KAAK,OAChB,CAAK,EACA,MAAMO,GAAS,CACdC,EAAiBD,CAAK,EAEtBP,EAAK,KAAK,OAChB,CAAK,CACL,CAGA,SAASQ,EAAiBC,EAAS,CACjC,KAAM,CAAE,MAAAC,EAAO,OAAAC,CAAQ,EAAGF,EAC1BT,EAAK,YAAY,QAAQY,GAAS,CAChC,GAAIA,EAAM,QACR,OAAQD,EAAM,CACZ,IAAK,YACHV,EAAS,QAAQ,CACf,QAAS,0BAA0BS,CAAK,KACxC,gBAAiB,UACjB,iBAAkB,SAC9B,CAAW,EACD,MACF,IAAK,WACHT,EAAS,MAAM,CACb,QAAS,yBAAyBS,CAAK,KACvC,gBAAiB,UACjB,iBAAkB,SAC9B,CAAW,CAGJ,CAEP,CAAG,CACH"}