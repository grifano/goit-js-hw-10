{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  buttonStart: document.querySelector('button[data-start]'),\n  timer: document.querySelector('.timer'),\n  datePicker: document.querySelector('#datetime-picker'),\n  userSelectedDate: undefined,\n};\nlet intervalID;\n\n// Flatpicker: Create a callendar and update UI\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // Check date if it is a future date\n    const currentTime = Date.now();\n    const selectedByUserToNumber = new Date(selectedDates[0]).getTime();\n    if (selectedByUserToNumber < currentTime) {\n      iziToast.error({\n        class: 'error-notification',\n        title: 'Error',\n        timeout: 5000,\n        iconUrl: './img/bi_x-octagon.svg',\n        titleColor: '#fff',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        messageColor: '#fff',\n        progressBarColor: '#B51B1B',\n        close: true,\n      });\n    } else {\n      // Remove class is-disable from button and save picked date from user\n      refs.buttonStart.classList.remove('is-disable');\n      refs.userSelectedDate = selectedByUserToNumber;\n      // Update UI with selected date\n      updateTimerUI();\n    }\n  },\n};\nflatpickr(refs.datePicker, options);\n\n// Function: Run timer within 1sek interval\nfunction runTimer() {\n  refs.buttonStart.classList.add('is-disable');\n  refs.datePicker.disabled = true;\n\n  // Check if there is already an interval running\n  if (intervalID) {\n    clearInterval(intervalID);\n  }\n\n  intervalID = setInterval(() => {\n    const convertedData = convertMs(refs.userSelectedDate - Date.now());\n    if (\n      convertedData.days < 0 &&\n      convertedData.hours < 0 &&\n      convertedData.minutes < 0 &&\n      convertedData.seconds < 0\n    ) {\n      refs.buttonStart.classList.remove('is-disable');\n      refs.datePicker.disabled = false;\n      return;\n    }\n\n    // Update UI\n    updateUi(convertedData);\n  }, 1000);\n}\n\n// Function: Converting milliseconds and return object\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Function: Update UI timer value\nfunction updateUi(value) {\n  const { days, hours, minutes, seconds } = value;\n  const timerValues = {\n    days: document.querySelector('span[data-days]'),\n    hours: document.querySelector('span[data-hours]'),\n    minutes: document.querySelector('span[data-minutes]'),\n    seconds: document.querySelector('span[data-seconds]'),\n  };\n\n  timerValues.days.innerText = addLeadingZero(days);\n  timerValues.hours.innerText = addLeadingZero(hours);\n  timerValues.minutes.innerText = addLeadingZero(minutes);\n  timerValues.seconds.innerText = addLeadingZero(seconds);\n}\n\n// Function: Update UI with timer values\nfunction updateTimerUI() {\n  const currentTimeData = convertMs(refs.userSelectedDate - Date.now());\n  updateUi(currentTimeData);\n}\n\n// Function: Add leading 0\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Button pressed\nrefs.buttonStart.addEventListener('click', runTimer);\n"],"names":["refs","intervalID","options","selectedDates","currentTime","selectedByUserToNumber","iziToast","updateTimerUI","flatpickr","runTimer","convertedData","convertMs","updateUi","ms","days","hours","minutes","seconds","value","timerValues","addLeadingZero","currentTimeData"],"mappings":"+IAKA,MAAMA,EAAO,CACX,YAAa,SAAS,cAAc,oBAAoB,EACxD,MAAO,SAAS,cAAc,QAAQ,EACtC,WAAY,SAAS,cAAc,kBAAkB,EACrD,iBAAkB,MACpB,EACA,IAAIC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,MAAMC,EAAc,KAAK,MACnBC,EAAyB,IAAI,KAAKF,EAAc,CAAC,CAAC,EAAE,UACtDE,EAAyBD,EAC3BE,EAAS,MAAM,CACb,MAAO,qBACP,MAAO,QACP,QAAS,IACT,QAAS,yBACT,WAAY,OACZ,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,aAAc,OACd,iBAAkB,UAClB,MAAO,EACf,CAAO,GAGDN,EAAK,YAAY,UAAU,OAAO,YAAY,EAC9CA,EAAK,iBAAmBK,EAExBE,IAEH,CACH,EACAC,EAAUR,EAAK,WAAYE,CAAO,EAGlC,SAASO,GAAW,CAClBT,EAAK,YAAY,UAAU,IAAI,YAAY,EAC3CA,EAAK,WAAW,SAAW,GAGvBC,GACF,cAAcA,CAAU,EAG1BA,EAAa,YAAY,IAAM,CAC7B,MAAMS,EAAgBC,EAAUX,EAAK,iBAAmB,KAAK,IAAG,CAAE,EAClE,GACEU,EAAc,KAAO,GACrBA,EAAc,MAAQ,GACtBA,EAAc,QAAU,GACxBA,EAAc,QAAU,EACxB,CACAV,EAAK,YAAY,UAAU,OAAO,YAAY,EAC9CA,EAAK,WAAW,SAAW,GAC3B,MACD,CAGDY,EAASF,CAAa,CACvB,EAAE,GAAI,CACT,CAGA,SAASC,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASL,EAASM,EAAO,CACvB,KAAM,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKC,EACpCC,EAAc,CAClB,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACxD,EAEEA,EAAY,KAAK,UAAYC,EAAeN,CAAI,EAChDK,EAAY,MAAM,UAAYC,EAAeL,CAAK,EAClDI,EAAY,QAAQ,UAAYC,EAAeJ,CAAO,EACtDG,EAAY,QAAQ,UAAYC,EAAeH,CAAO,CACxD,CAGA,SAASV,GAAgB,CACvB,MAAMc,EAAkBV,EAAUX,EAAK,iBAAmB,KAAK,IAAG,CAAE,EACpEY,EAASS,CAAe,CAC1B,CAGA,SAASD,EAAeF,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGAlB,EAAK,YAAY,iBAAiB,QAASS,CAAQ"}